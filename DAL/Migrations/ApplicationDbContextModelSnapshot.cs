// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasComment("Первинний ключ");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreate")
                        .HasComment("Дата створення");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdate")
                        .HasComment("Дата оновлення");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("Прапор видалення");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasComment("Назва категорії");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("DAL.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasComment("Первинний ключ");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("Amount")
                        .HasComment("Сума транзакції");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreate")
                        .HasComment("Дата створення");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdate")
                        .HasComment("Дата оновлення");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("Прапор видалення");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("Note")
                        .HasComment("Коментар до транзакції");

                    b.Property<string>("Source")
                        .HasColumnType("text")
                        .HasColumnName("Source")
                        .HasComment("Джерело транзакції");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TransactionDate")
                        .HasComment("Дата транзакції");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("Type")
                        .HasComment("Тип транзакції");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasComment("Первинний ключ");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreate")
                        .HasComment("Дата створення");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdate")
                        .HasComment("Дата оновлення");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email")
                        .HasComment("Email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("FullName")
                        .HasComment("Повне ім'я");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted")
                        .HasComment("Прапор видалення");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PasswordHash")
                        .HasComment("Хеш паролю");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Transaction", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
